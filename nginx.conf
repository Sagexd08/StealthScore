# Advanced Nginx Configuration for Stealth Score PWA
# High-performance proxy server with advanced caching and optimization

# Worker configuration for optimal performance
worker_processes auto;
worker_rlimit_nofile 65535;
worker_cpu_affinity auto;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Enhanced logging with performance metrics
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format performance '$time_iso8601 $remote_addr $request_method $request_uri '
                          '$status $body_bytes_sent $request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/performance.log performance;
    error_log /var/log/nginx/error.log warn;

    # Advanced compression configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        application/rss+xml
        application/geo+json
        application/ld+json
        application/manifest+json
        application/x-font-ttf
        application/x-web-app-manifest+json
        image/svg+xml
        image/x-icon
        image/bmp
        font/opentype;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=frontend:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Map for WebP support
    map $http_accept $webp_suffix {
        "~*webp" ".webp";
        default "";
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=frontend:10m rate=30r/s;

    # Upstream backend servers
    upstream backend {
        server localhost:8000;
        # Add more backend servers for load balancing if needed
        # server localhost:8001;
        # server localhost:8002;
    }

    # Upstream backend configuration
    upstream backend {
        server backend:8000;
        keepalive 32;
    }

    # Cache zones
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=30d use_temp_path=off;

    # Main server configuration
    server {
        listen 80;
        listen [::]:80;
        server_name localhost stealth-score.local;
        root /var/www/stealth-score/frontend/dist;
        index index.html;

        # Enhanced security headers for PWA
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Robots-Tag "noindex, nofollow" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;

        # PWA and Service Worker headers
        add_header Service-Worker-Allowed "/" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;

        # Enhanced CSP for PWA and crypto payments
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self' 'unsafe-inline' 'unsafe-eval'
                https://js.stripe.com
                https://checkout.stripe.com
                https://cdn.jsdelivr.net
                https://unpkg.com;
            style-src 'self' 'unsafe-inline'
                https://fonts.googleapis.com
                https://cdn.jsdelivr.net;
            font-src 'self'
                https://fonts.gstatic.com
                data:;
            img-src 'self'
                data:
                https:
                blob:;
            connect-src 'self'
                https://api.stripe.com
                https://openrouter.ai
                https://mainnet.infura.io
                https://polygon-rpc.com
                https://bsc-dataseed.binance.org
                https://arb1.arbitrum.io
                wss:;
            frame-src
                https://js.stripe.com
                https://hooks.stripe.com;
            worker-src 'self' blob:;
            manifest-src 'self';
            media-src 'self' blob:;
        " always;

        # Service Worker - no cache for immediate updates
        location = /sw.js {
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Service-Worker-Allowed "/";
        }

        # Manifest file - short cache for PWA updates
        location = /manifest.json {
            expires 24h;
            add_header Cache-Control "public, must-revalidate";
        }

        # Static JavaScript and CSS with versioning
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
            access_log off;
            gzip_static on;
        }

        # Fonts with CORS headers
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            access_log off;
        }

        # Images with WebP support
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept";
            access_log off;

            # Try WebP version first if supported
            try_files $uri$webp_suffix $uri =404;
        }

        # HTML files - no cache for PWA shell updates
        location ~* \.html$ {
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        # Frontend static files (React build)
        location / {
            root /var/www/stealth-score/frontend/dist;
            try_files $uri $uri/ @fallback;

            # Apply rate limiting
            limit_req zone=frontend burst=50 nodelay;
        }

        # Fallback for SPA routing
        location @fallback {
            root /var/www/stealth-score/frontend/dist;
            try_files /index.html =404;
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # API routes - proxy to Python backend with caching
        location /api/ {
            # Apply rate limiting for API
            limit_req zone=api burst=20 nodelay;
            limit_conn conn_limit_per_ip 10;

            # Proxy settings
            proxy_pass http://backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # API response caching
            proxy_cache api_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            proxy_cache_lock_timeout 5s;
            proxy_cache_methods GET HEAD;

            # Add cache status header for debugging
            add_header X-Cache-Status $upstream_cache_status;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Quick timeout for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # WebSocket support for development
        location /ws {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(env|config|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /var/www/stealth-score/frontend/dist;
        }
    }

    # HTTPS configuration (for production)
    server {
        listen 443 ssl http2;
        server_name stealth-score.com www.stealth-score.com;

        # SSL certificates (replace with your actual certificates)
        ssl_certificate /etc/ssl/certs/stealth-score.crt;
        ssl_private_key /etc/ssl/private/stealth-score.key;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Same configuration as HTTP server
        include /etc/nginx/conf.d/stealth-score-common.conf;
    }
}
