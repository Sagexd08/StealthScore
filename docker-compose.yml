version: '3.8'

services:
  # Nginx Proxy Server
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/var/www/stealth-score/frontend/dist:ro
      - ./ssl:/etc/ssl:ro  # For SSL certificates in production
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - pitchguard-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - VITE_API_URL=http://backend:8000
      - VITE_APP_NAME=PitchGuard
      - VITE_APP_VERSION=2.0.0
      - VITE_ENABLE_TEE=true
      - VITE_ENABLE_ZK_PROOFS=true
      - VITE_ENABLE_FEDERATED_LEARNING=true
      - VITE_ENABLE_WEB3=true
    depends_on:
      - backend
    networks:
      - pitchguard-network
    restart: unless-stopped

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - ENVIRONMENT=production
      - CORS_ORIGINS=http://localhost:3000,http://localhost:80
    networks:
      - pitchguard-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache (for backend)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - pitchguard-network
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  pitchguard-network:
    driver: bridge

volumes:
  redis_data:
    driver: local